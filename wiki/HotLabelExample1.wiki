#summary Hot Label Component Example 1.
<wiki:comment>
$Rev$
$Date$
</wiki:comment>

= Examples: Using Highlighting =

These examples present two possible designs for _[TPJHotLabel TPJHotLabel]_ components that use text highlighting to indicate that the label is clickable.

== Example 1 ==

This example uses a change in text decoration to highlight the text of the label when the mouse passes over it.

First we must enable highlighting by setting _[TPJHotLabelHighlightURL HighlightURL]_ to `True`. Then we set _[TPJHotLabelFont Font].Style_ to `[]`, _[TPJHotLabelHighlightFont HighlightFont].Style_ to `[fsUnderline]` and make _[TPJHotLabelHighlightFont HighlightFont].Color_ the same as _[TPJHotLabelFont Font].Color_. We use a colour that is different from the standard label font to indicate the label is clickable.

Start a new application and place a _[TPJHotLabel TPJHotLabel]_ component on the form. Now select the component and use the object inspector to set the following property values:

|| *Property* || *Value* ||
|| Font.Color || `clBlue` ||
|| Font.Style || `[]` ||
|| !HighlightFont.Color || `clBlue` ||
|| !HighlightFont.Style || `[fsUnderline]` ||
|| HighlightURL || `True` ||

If you don't want to use the object inspector you can double click the form to create a _!FormCreate_ event handler and enter the following code in it:

{{{
TPJHotLabel1.Font.Color := clBlue;
TPJHotLabel1.HighlightFont.Color := TPJHotLabel1.Font.Color;
TPJHotLabel1.Font.Style := [];
TPJHotLabel1.HighlightFont.Style := [fsUnderline];
TPJHotLabel1.HighlightURL := True;
}}}

Now compile and run the application and roll the mouse over the URL and see the highlighting. The un-highlighted label will display with no text decoration and it will become underlined when the mouse passes over it.

== Example 2 ==

The second example uses a colour change to provide the highlighting. The default values of the _[TPJHotLabelFont Font]_ and _[TPJHotLabelHighlightFont HighlightFont]_ properties will suffice for this example - unhighlighted text is navy blue and is underlined while the highlighted text is red and is also underlined.

Start a new application and drop a _[TPJHotLabel TPJHotLabel]_ component on the form. Either use the property inspector to set the _[TPJHotLabelHighlightURL HighlightURL]_ property to `True` or create a _!FormCreate_ event handler and enter the following line of code:

{{{
TPJHotLabel1.HighlightURL := True;
}}}

Again, run the application and move the mouse cursor over the control to see the highlighting effect.

*Link:*

  * Back to [HotLabelComponent Hot Label Component Page]
