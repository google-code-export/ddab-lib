{\rtf1\ansi\ansicpg1252\deff0\deftab720\deflang2057
{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss \fcharset0 Arial;}{\f2\fnil \fcharset2 WingDings;}{\f3\fnil \fcharset0 Arial;}{\f4\fmodern Courier New;}{\f5\fmodern \fcharset0 Courier New;}}
{\colortbl\red0\green0\blue0;\red0\green128\blue0;\red0\green0\blue255;}
#{\footnote {#}IDH_SI_UNIT}
${\footnote {$}PSSysInfo unit}
K{\footnote {K}PJSysInfo}
A{\footnote {A}PJSysInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf0 
\par \plain\f0\fs22\cf2\b PJSysInfo
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 This unit contains a set of static classes that provide various pieces of system information. They are:
\par \plain\f1\fs8\cf0 
\par \pard \fi-400 \li400 \tx400 \plain\f2\fs18\cf0 \'A7\plain\f3\fs18\cf0 \tab {\strike TPJComputerInfo}{\v IDH_CI_CLASS} - provides information about the computer system.
\par \plain\f2\fs18\cf0 \'A7\plain\f3\fs18\cf0 \tab {\strike TPJSystemFolders}{\v IDH_SF_CLASS} - provides the paths of various standard system folders.
\par \plain\f2\fs18\cf0 \'A7\plain\f3\fs18\cf0 \tab {\strike TPJOSInfo}{\v IDH_OSI_CLASS} - provides information about the operating system.\plain\f1\fs18\cf0 
\par \pard \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 PJSysInfo unit also defines a set of {\strike global variables}{\v IDH_EXOSINFOVARS} that compliment and extend the operating system information provided by global variables defined in the \plain\f1\fs18\cf0\i SysUtils\plain\f1\fs18\cf0  unit. 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Certain Windows types and constants not defined by Delphi that assist in working with extended operating system information are declared in this unit. Help on these definitions can be found on MSDN or in the Windows platform SDK.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Earlier versions of PJSysInfo contained \plain\f0\fs18\cf0 a set of \plain\f1\fs18\cf0 deprecated \plain\f0\fs18\cf0 routines \plain\f1\fs18\cf0 and a deprecated component \plain\f0\fs18\cf0 that \plain\f1\fs18\cf0 also \plain\f0\fs18\cf0 provide \plain\f1\fs18\cf0 system \plain\f0\fs18\cf0 information\plain\f1\fs18\cf0 . From v3.0 the routines and component have been removed by default. However, if the deprecated code is required for backwards compatibility it can be enabled by defining the PJSYSINFO_COMPILE_DEPRECATED symbol before compiling the unit. No help is available for the deprecated code. No help is provided for this deprecated code.
\par \plain\f0\fs12\cf0 
\par \plain\f1\fs18\cf0\b Credits and License\plain\f1\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This unit was created by Peter D Johnson and is copyright (c) 2001-2008 by Peter D Johnson (www.delphidabbler.com). Guillermo Fazzolari and Laurent Pierre have contributed to the code.
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 The source code is released under the Mozilla Public License and is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
\par 
\par \page 
#{\footnote {#}IDH_TPJOSPLATFORM}
${\footnote {$}TPJOSPlatform}
K{\footnote {K}TPJOSPlatform}
A{\footnote {A}TPJOSPlatform}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSPlatform\plain\f0\fs20\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \tx400 \plain\f0\fs18\cf0 This type represents the various operating system platforms detected by {\strike TPJOSInfo.Platform}{\v IDH_OSI_PLATFORM}. \plain\f1\fs18\cf0 The type\plain\f0\fs18\cf0  declared as:
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \pard \keep \plain\f4\fs18\cf0\b type\plain\f4\fs18\cf0  TPJOSPlatform = (ospWinNT, ospWin9x, ospWin32s);
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The \plain\f1\fs18\cf0 values\plain\f0\fs18\cf0  have the following meaning:
\par \plain\f0\fs8\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \tx2000 \plain\f0\fs18\cf0\i ospWinNT\plain\f0\fs18\cf0 \tab Windows NT platform.
\par \plain\f0\fs18\cf0\i ospWin9x\plain\f0\fs18\cf0 \tab Windows 9x platform.
\par \plain\f0\fs18\cf0\i ospWin32s\plain\f0\fs18\cf0 \tab The Win32s platform running on another operating system.
\par \page 
#{\footnote {#}ISH_TPJOSPRODUCT}
${\footnote {$}TPJOSProduct}
K{\footnote {K}TPJOSProduct}
A{\footnote {A}TPJOSProduct}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSProduct\plain\f0\fs20\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \tx400 \plain\f0\fs18\cf0 This type represents the various operating system products detected by {\ul TPJOSInfo.Product}{\v IDH_OSI_PRODUCT}. \plain\f1\fs18\cf0 The type\plain\f0\fs18\cf0  is declared as:
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \pard \keep \plain\f4\fs18\cf0\b type\plain\f4\fs18\cf0  TPJOSProduct = (osUnknownWinNT, osWinNT, osWin2K, osWinXP,
\par   osUnknownWin9x, osWin95, osWin98, osWinMe, osUnknownWin32s\plain\f5\fs18\cf0 , osWinSvr2003,
\par   osUnknown, osWinVista, osWinSvr2003R2, osWinSvr2008, osWinLater, osWin7,
\par   osWinSvr2008R2\plain\f4\fs18\cf0 );
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The \plain\f1\fs18\cf0 values\plain\f0\fs18\cf0  have the following meaning:
\par \plain\f0\fs8\cf0 
\par \pard \fi-2000 \li2000 \tx2000 \plain\f1\fs18\cf0\i\b Windows NT OSs\plain\f0\fs18\cf0\i 
\par osUnknownWinNT\plain\f0\fs18\cf0 \tab An unknown product on the Windows NT platform.
\par \plain\f0\fs18\cf0\i osWinNT\plain\f0\fs18\cf0 \tab Windows NT (v3.51-v4) - needs major and minor version information to identify.
\par \plain\f0\fs18\cf0\i osWin2k\plain\f0\fs18\cf0 \tab Windows 2000.
\par \plain\f0\fs18\cf0\i osWinXP\plain\f0\fs18\cf0 \tab Windows XP.
\par \plain\f0\fs18\cf0\i osWinSvr2003\plain\f1\fs18\cf0 \tab Windows Server 2003
\par \plain\f1\fs18\cf0\i osWinSvr2003R2\plain\f1\fs18\cf0 \tab Windows Server 2003 R2
\par \plain\f1\fs18\cf0\i osWinVista\plain\f1\fs18\cf0 \tab Windows Vista
\par \plain\f1\fs18\cf0\i osWinSvr2008\plain\f1\fs18\cf0 \tab Windows Server 2008
\par \plain\f1\fs18\cf0\i osWin7\plain\f1\fs18\cf0 \tab Windows 7
\par \plain\f1\fs18\cf0\i osWinSvr2008R2\plain\f1\fs18\cf0 \tab Windows Server 2008 R2
\par \plain\f1\fs18\cf0\i osWinLater\plain\f1\fs18\cf0 \tab A later Windows version than v6.0 (Vista / Server 2008)
\par \plain\f1\fs18\cf0\i\b Windows 9x OSs\plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\i osUnknownWin9x\plain\f0\fs18\cf0 \tab An unknwon product on the Windows 9x platform.
\par \plain\f0\fs18\cf0\i osWin95\plain\f0\fs18\cf0 \tab Windows 95 or Windows 95 OSR1.
\par \plain\f0\fs18\cf0\i osWin98\plain\f0\fs18\cf0 \tab Windows 98 or Windows 98 SE.
\par \plain\f0\fs18\cf0\i osWinMe\plain\f0\fs18\cf0 \tab Windows Me.
\par \plain\f1\fs18\cf0\i\b Win32s\plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\i osUnknownWin32s\plain\f0\fs18\cf0 \tab An operating system running the Win32s platform.
\par \plain\f1\fs18\cf0\i\b Unknown OS\plain\f1\fs18\cf0 
\par \plain\f1\fs18\cf0\i osUnknown\plain\f1\fs18\cf0 \tab An unkown operating system.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_TPJProcessorArchitecture}
${\footnote {$}TPJProcessorArchitecture}
K{\footnote {K}TPJProcessorArchitecture}
A{\footnote {A}TPJProcessorArchitecture}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJProcessorArchitecture\plain\f0\fs20\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \tx400 \plain\f0\fs18\cf0 This type \plain\f1\fs18\cf0 represents \plain\f0\fs18\cf0 the various \plain\f1\fs18\cf0 processor architectures \plain\f0\fs18\cf0 detected by {\strike TPJComputerInfo.Processor}{\v IDH_CI_Processor}. \plain\f1\fs18\cf0 The type\plain\f0\fs18\cf0  declared as:
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \pard \keep \plain\f4\fs18\cf0\b type\plain\f4\fs18\cf0  TPJProcessorArchitecture = (\plain\f5\fs18\cf0 paUnknown\plain\f4\fs18\cf0 , \plain\f5\fs18\cf0 paX64\plain\f4\fs18\cf0 , \plain\f5\fs18\cf0 paIA64, paX86\plain\f4\fs18\cf0 );
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The \plain\f1\fs18\cf0 values\plain\f0\fs18\cf0  have the following meaning:
\par \plain\f0\fs8\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \tx2000 \plain\f1\fs18\cf0\i paUnknown\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Unknown processor\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0\i paX64\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 X64 (AMD or Intel)\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0\i paIA64\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Intel Itanium processor family\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0\i paX86\plain\f1\fs18\cf0 \tab Intel 32 bit x86
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_TPJBootMode}
${\footnote {$}TPJBootMode}
K{\footnote {K}TPJBootMode}
A{\footnote {A}TPJBootMode}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJBootMode\plain\f0\fs20\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \pard \tx400 \plain\f0\fs18\cf0 This type \plain\f1\fs18\cf0 represents \plain\f0\fs18\cf0 the \plain\f1\fs18\cf0 different operating system boot modes detected by\plain\f0\fs18\cf0  {\strike TPJComputerInfo.BootMode}{\v IDH_CI_BootMode}. \plain\f1\fs18\cf0 The type\plain\f0\fs18\cf0  declared as:
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \pard \keep \plain\f4\fs18\cf0\b type\plain\f4\fs18\cf0  TPJBootMode = (bmUnknown\plain\f5\fs18\cf0 , bmNormal\plain\f4\fs18\cf0 , \plain\f5\fs18\cf0 bmSafeMode\plain\f4\fs18\cf0 , \plain\f5\fs18\cf0 bmSafeModeNetwork\plain\f4\fs18\cf0 );
\par \pard \fi-400 \li400 \tx400 \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 The \plain\f1\fs18\cf0 values\plain\f0\fs18\cf0  have the following meaning:
\par \plain\f0\fs8\cf0 
\par \pard \fi-2400 \li2400 \tx2400 \plain\f1\fs18\cf0\i bmUnknown\tab \plain\f1\fs18\cf0 Unknown boot mode.\plain\f1\fs18\cf0\i 
\par bmNormal\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Normal boot\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0\i bmSafeMode\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Booted in safe mode with no networking\plain\f0\fs18\cf0 .
\par \plain\f1\fs18\cf0\i bmSafeModeNetwork\plain\f0\fs18\cf0 \tab \plain\f1\fs18\cf0 Booted in safe mode with networking\plain\f0\fs18\cf0 .\plain\f1\fs18\cf0 
\par \pard \fi-1600 \li1600 \tx1600 \tx2000 \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_ESI_CLASS}
${\footnote {$}EPJSysInfo}
K{\footnote {K}EPJSysInfo}
A{\footnote {A}EPJSysInfo_Object;EPJSysInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  
\par \plain\f0\fs22\cf2\b EPJSysInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_ESI_HEIRACHY}          {\ul Properties}{\v IDH_ESI_PROPERTIES}          {\ul Methods}{\v IDH_ESI_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard EPJSysInfo is used for exception raised by code in the PJSysInfo unit.
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 EPJSysInfo exceptions are raised when errors occur in \plain\f1\fs18\cf0 any of the classes pr routines in the PJSysInfo unit.\plain\f0\fs18\cf0 .\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_ESI_HEIRACHY}
${\footnote {$}EPJSysInfo Heirachy}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_Object,1)}
\par     |
\par {\strike Exception}{\v !AL(Exception_Object,1)}
\par \page 
#{\footnote {#}IDH_ESI_PROPERTIES}
${\footnote {$}EPJSysInfo Properties}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 All properties of EPJSysInfo are inherited without change from the {\strike Exception}{\v !AL(Exception_Object,1)} object.
\par \page 
#{\footnote {#}IDH_ESI_METHODS}
${\footnote {$}EPJSysInfo Methods}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 All methods of EPJSysInfo are inherited without change from the {\strike Exception}{\v !AL(Exception_Object,1)} class.\plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_OSI_CLASS}
${\footnote {$}TPJOSInfo}
K{\footnote {K}TPJOSInfo}
A{\footnote {A}TPJOSInfo_Object;TPJOSInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  
\par \plain\f1\fs22\cf2\b TPJOSInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_OSI_HEIRACHY}          {\ul Properties}{\v IDH_OSI_PROPERTIES}          {\ul Methods}{\v IDH_OSI_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJ\plain\f1\fs18\cf0 OS\plain\f0\fs18\cf0 Info provides access to information about the computer\plain\f1\fs18\cf0 's operting system\plain\f0\fs18\cf0 .
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 TPJOSInfo\plain\f0\fs18\cf0  is a \plain\f1\fs18\cf0 static class \plain\f0\fs18\cf0 that gives access to information about the \plain\f1\fs18\cf0 operating system on which the program is running. All the class' functionality is exposed through its static methods. Because it is static the class does not need to be instantiated before use.
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_HEIRACHY}
${\footnote {$}TPJOSInfo Heirachy}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_Object,1)}
\par 
\par \page 
#{\footnote {#}IDH_OSI_PROPERTIES}
${\footnote {$}TPJOSInfo Properties}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \plain\f1\fs18\cf0 The class has no properties.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_METHODS}
${\footnote {$}TPJOSInfo Methods}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tx2400 \tx2600 \plain\f1\fs18\cf0 \tab {\strike BuildNumber}{\v IDH_OSI_BUILDNUMBER}
\par \tab {\strike Description}{\v IDH_OSI_DESCRIPTION}\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 \tab {\strike Edition}{\v IDH_OSI_EDITION}
\par \tab {\strike HasPenExtensions}{\v IDH_OSI_HasPenExtensions}
\par \tab {\strike IsMediaCenter}{\v IDH_OSI_IsMediaCenter}
\par \tab {\strike IsServer}{\v IDH_OSI_ISSERVER}
\par \tab {\strike IsTabletPC}{\v IDH_OSI_IsTabletPC}
\par \tab {\strike IsWin32s}{\v IDH_OSI_ISWIN32S}
\par \tab {\strike IsWin9x}{\v IDH_OSI_ISWIN9X}
\par \tab {\strike IsWinNT}{\v IDH_OSI_ISWINNT}
\par \tab {\strike IsWow64}{\v IDH_OSI_ISWOW64}
\par \tab {\strike MajorVersion}{\v IDH_OSI_MAJORVERSION}
\par \tab {\strike MinorVersion}{\v IDH_OSI_MINORVERSION}
\par \tab {\strike Platform}{\v IDH_OSI_PLATFORM}
\par \tab {\strike Product}{\v IDH_OSI_PRODUCT}
\par \tab {\strike ProductID}{\v IDH_OSI_PRODUCTID}
\par \tab {\strike ProductName}{\v IDH_OSI_PRODUCTNAME}
\par \tab {\strike ServicePack}{\v IDH_OSI_SERVICEPACK}
\par \tab {\strike ServicePackMajor}{\v IDH_OSI_SERVICEPACKMAJOR}
\par \tab {\strike ServicePackMinor}{\v IDH_OSI_SERVICEPACKMINOR}
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_OSI_BUILDNUMBER}
${\footnote {$}TPJOSInfo.BuildNumber}
K{\footnote {K}BuildNumber,TPJOSInfo;TPJOSInfo,BuildNumber;BuildNumber}
A{\footnote {A}TPJOSInfo_BuildNumber;BuildNumber_Method;BuildNumber}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b BuildNumber\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system build number\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  BuildNumber: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the build number of the operating system.\plain\f1\fs8\cf0 
\par \page 
#{\footnote {#}IDH_OSI_DESCRIPTION}
${\footnote {$}TPJOSInfo.Description}
K{\footnote {K}Description,TPJOSInfo;TPJOSInfo,Description;Description}
A{\footnote {A}TPJOSInfo_Description;Description_Method;Description}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b Description\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets a full information about of an operating system version\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Description: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns a description of the operating system. The description depends on the \plain\f1\fs18\cf0 available \plain\f0\fs18\cf0 information\plain\f1\fs18\cf0  and the platform.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 For \plain\f1\fs18\cf0 the \plain\f0\fs18\cf0 Windows 9x \plain\f1\fs18\cf0 platform\plain\f0\fs18\cf0  systems the \plain\f1\fs18\cf0 product \plain\f0\fs18\cf0 name is given along with \plain\f1\fs18\cf0 details of any service pack\plain\f0\fs18\cf0 , e.g. \plain\f0\fs18\cf0\i Windows 98\plain\f0\fs18\cf0 , \plain\f0\fs18\cf0\i Windows 98 SE\plain\f0\fs18\cf0 .
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 For NT \plain\f1\fs18\cf0 platform \plain\f0\fs18\cf0 operating systems the name of the operating system is provided (e.g. \plain\f0\fs18\cf0\i Windows 2000\plain\f1\fs18\cf0\i  or Windows NT\plain\f0\fs18\cf0 ) along with the \plain\f1\fs18\cf0 edition\plain\f0\fs18\cf0  (e.g. \plain\f0\fs18\cf0\i Professional\plain\f0\fs18\cf0 ), any service packs and the build number.\plain\f1\fs18\cf0  On Windows NT the version number follows the product name.\plain\f0\fs18\cf0 
\par \plain\f1\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_EDITION}
${\footnote {$}TPJOSInfo.Edition}
K{\footnote {K}Edition,TPJOSInfo;TPJOSInfo,Edition;Edition}
A{\footnote {A}TPJOSInfo_Edition;Edition_Method;Edition}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b Edition\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the edition of an operating system product\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Edition: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the name of a specific edition of an NT platform operating system product. An empty string is returned if no specific edition information is available or if the operating system is part of the Windows 9x platform. This method does not include the main product name - this can be found by using the {\strike ProductName}{\v IDH_OSI_PRODUCTNAME} method.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 For example for Windows 2000 Professional, Edition will return 'Professional' while ProductName returns 'Windows 2000'.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_HasPenExtensions}
${\footnote {$}TPJOSInfo.HasPenExtensions}
K{\footnote {K}HasPenExtensions,TPJOSInfo;TPJOSInfo,HasPenExtensions;HasPenExtensions}
A{\footnote {A}TPJOSInfo_HasPenExtensions;HasPenExtensions_Method;HasPenExtensions}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b HasPenExtensions\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for Windows Pen Extensions\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  \plain\f5\fs18\cf0 HasPenExtensions\plain\f4\fs18\cf0 : \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if \plain\f1\fs18\cf0 Windows Pen Extensions are \plain\f0\fs18\cf0 installed\plain\f1\fs18\cf0 .
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_IsMediaCenter}
${\footnote {$}TPJOSInfo.IsMediaCenter}
K{\footnote {K}IsMediaCenter,TPJOSInfo;TPJOSInfo,IsMediaCenter;IsMediaCenter}
A{\footnote {A}TPJOSInfo_IsMediaCenter;IsMediaCenter_Method;IsMediaCenter}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsMediaCenter\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for Windows Media Center\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsMediaCenter: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if \plain\f1\fs18\cf0 Windows Media Center is \plain\f0\fs18\cf0 installed\plain\f1\fs18\cf0 .
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_ISSERVER}
${\footnote {$}TPJOSInfo.IsServer}
K{\footnote {K}IsServer,TPJOSInfo;TPJOSInfo,IsServer;IsServer}
A{\footnote {A}TPJOSInfo_IsServer;IsServer_Method;IsServer}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsServer\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for a server operating system\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsServer: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if \plain\f1\fs18\cf0 the \plain\f0\fs18\cf0 operating system is a server\plain\f1\fs18\cf0  system.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_IsTabletPC}
${\footnote {$}TPJOSInfo.IsTabletPC}
K{\footnote {K}IsTabletPC,TPJOSInfo;TPJOSInfo,IsTabletPC;IsTabletPC}
A{\footnote {A}TPJOSInfo_IsTabletPC;IsTabletPC_Method;IsTabletPC}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsTabletPC\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for Windows Tablet PC\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsTabletPC: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if \plain\f1\fs18\cf0 Windows Tablet PC is \plain\f0\fs18\cf0 installed\plain\f1\fs18\cf0 .
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_ISWIN32S}
${\footnote {$}TPJOSInfo.IsWin32s}
K{\footnote {K}IsWin32s,TPJOSInfo;TPJOSInfo,IsWin32s;IsWin32s}
A{\footnote {A}TPJOSInfo_IsWin32s;IsWin32s_Method;IsWin32s}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsWin32s\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for the Windows 32s system\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsWin32s: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if running on Win32s. This is unlikely to ever return true\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 since Delphi is not believed to run on Win32s itself\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_ISWIN9X}
${\footnote {$}TPJOSInfo.IsWin9x}
K{\footnote {K}IsWin9x,TPJOSInfo;TPJOSInfo,IsWin9x;IsWin9x}
A{\footnote {A}TPJOSInfo_IsWin9x;IsWin9x_Method;IsWin9x}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.IsWin9x\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for the Windows 95 platform\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsWin9x: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if a Windows 9x operating system is installed (i.e. Windows\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 95, Windows 98 or Windows Me).\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_OSI_ISWINNT}
${\footnote {$}TPJOSInfo.IsWinNT}
K{\footnote {K}IsWinNT,TPJOSInfo;TPJOSInfo,IsWinNT;IsWinNT}
A{\footnote {A}TPJOSInfo_IsWinNT;IsWinNT_Method;IsWinNT}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsWinNT\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks for the Windows NT platform\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsWin\plain\f5\fs18\cf0 NT\plain\f4\fs18\cf0 : \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if an NT operating system is installed (including Windows\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 2000, Windows XP\plain\f1\fs18\cf0 , Windows Vista, Windows 7,\plain\f0\fs18\cf0  Windows 2003 Server\plain\f1\fs18\cf0  and Windows 2008 Server\plain\f0\fs18\cf0 )\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_ISWOW64}
${\footnote {$}TPJOSInfo.IsWow64}
K{\footnote {K}IsWow64,TPJOSInfo;TPJOSInfo,IsWow64;IsWow64}
A{\footnote {A}TPJOSInfo_IsWow64;IsWow64_Method;IsWow64}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b IsWow64\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks if the program is running on WOW64\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsWow64: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns true if application is running under WOW64 \plain\f1\fs18\cf0 subsystem \plain\f0\fs18\cf0 on a 64 bit operating\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 system\plain\f1\fs18\cf0 .\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_MAJORVERSION}
${\footnote {$}TPJOSInfo.MajorVersion}
K{\footnote {K}MajorVersion,TPJOSInfo;TPJOSInfo,MajorVersion;MajorVersion}
A{\footnote {A}TPJOSInfo_MajorVersion;MajorVersion_Method;MajorVersion}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b MajorVersion\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system major version\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  MajorVersion: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the major version number of the operating system.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The corresponding minor version number is provided by the {\strike MinorVersion}{\v IDH_OSI_MINORVERSION} method.\plain\f0\fs18\cf0 
\par 
\par \page 
#{\footnote {#}IDH_OSI_MINORVERSION}
${\footnote {$}TPJOSInfo.MinorVersion}
K{\footnote {K}MinorVersion,TPJOSInfo;TPJOSInfo,MinorVersion;MinorVersion}
A{\footnote {A}TPJOSInfo_MinorVersion;MinorVersion_Method;MinorVersion}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b MinorVersion\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system minor version\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  MinorVersion: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the minor version number of the operating system.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The corresponding major version number is provided by the {\strike MajorVersion}{\v IDH_OSI_MAJORVERSION} method.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_PLATFORM}
${\footnote {$}TPJOSInfo.Platform}
K{\footnote {K}Platform,TPJOSInfo;TPJOSInfo,Platform;Platform}
A{\footnote {A}TPJOSInfo_Platform;Platform_Method;Platform}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b Platform\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system platform\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Platform: {\strike TPJOSPlatform}{\v IDH_TPJOSPLATFORM};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns value indentifying \plain\f1\fs18\cf0 the \plain\f0\fs18\cf0 OS platform\plain\f1\fs18\cf0 . \plain\f0\fs18\cf0 This will be either \plain\f0\fs18\cf0\i ospWinNT\plain\f0\fs18\cf0  (for the NT platform), \plain\f0\fs18\cf0\i ospWin9x \plain\f0\fs18\cf0 (for the WIndows 9x platform) or \plain\f0\fs18\cf0\i ospWin32s\plain\f0\fs18\cf0  (if the program is running under Win32s). If the platform is not recognised an\plain\f1\fs18\cf0  {\strike EPJSysInfo}{\v IDH_ESI_CLASS} exception is raised.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_PRODUCT}
${\footnote {$}TPJOSInfo.Product}
K{\footnote {K}Product,TPJOSInfo;TPJOSInfo,Product;Product}
A{\footnote {A}TPJOSInfo_Product;Product_Method;Product}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b Product\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets a code representing the operating system product\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Product: {\strike TPJOSProduct}{\v ISH_TPJOSPRODUCT};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 a \plain\f0\fs18\cf0 value identifying \plain\f1\fs18\cf0 the operating system product. \plain\f0\fs18\cf0 The product can be thought of as the marketing name for the operating system - e.g. \plain\f0\fs18\cf0\i Windows NT\plain\f0\fs18\cf0 ,\plain\f0\fs18\cf0\i  Windows 2000\plain\f0\fs18\cf0 ,\plain\f0\fs18\cf0\i  Windows 98\plain\f0\fs18\cf0 .
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 If a product cannot be identified then then either \plain\f0\fs18\cf0\i osUnknownWinNT\plain\f0\fs18\cf0  or \plain\f0\fs18\cf0\i osUnknownWin9x\plain\f0\fs18\cf0  depending on the platform. If the platform is Win32s then the product is given as \plain\f0\fs18\cf0\i osUnknownWin32s\plain\f0\fs18\cf0 .\plain\f1\fs18\cf0  Finally, if the product cannot be identified at all, \plain\f1\fs18\cf0\i osUnknown\plain\f1\fs18\cf0  is returned.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 To find the string representation of the product name use \plain\f1\fs18\cf0 the {\strike ProductName}{\v IDH_OSI_PRODUCTNAME} method.
\par \plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_PRODUCTID}
${\footnote {$}TPJOSInfo.ProductID}
K{\footnote {K}ProductID,TPJOSInfo;TPJOSInfo,ProductID;ProductID}
A{\footnote {A}TPJOSInfo_ProductID;ProductID_Method;ProductID}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b ProductID\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the Windows product ID\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ProductID: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the product ID of the operating system. This ID is unique to each Windows installation.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_OSI_PRODUCTNAME}
${\footnote {$}TPJOSInfo.ProductName}
K{\footnote {K}ProductName,TPJOSInfo;TPJOSInfo,ProductName;ProductName}
A{\footnote {A}TPJOSInfo_ProductName;ProductName_Method;ProductName}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b ProductName\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the name of the operating system product\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ProductName: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the name of the operating system product. \plain\f0\fs18\cf0 The product can be thought of as the marketing name for the operating system\plain\f1\fs18\cf0 . If the product can't be determined then the empty string is returned.
\par \plain\f1\fs8\cf0 
\par \plain\f0\fs18\cf0 The product name for both Windows NT 3.51 and Windows NT 4 is \plain\f0\fs18\cf0\i "Windows NT"\plain\f0\fs18\cf0 . Use the\plain\f1\fs18\cf0  MajorVersion and MinorVersion methods to distibuish between them. \plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 A unique code representing the OS product can be found by using the {\strike Product}{\v IDH_OSI_PRODUCT} method.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_SERVICEPACK}
${\footnote {$}TPJOSInfo.ServicePack}
K{\footnote {K}ServicePack,TPJOSInfo;TPJOSInfo,ServicePack;ServicePack}
A{\footnote {A}TPJOSInfo_ServicePack;ServicePack_Method;ServicePack}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b ServicePack\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system's service pack\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ServicePack: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 a description of any operating system service pack. Returns an empty string if there is no service pack. 
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 On the Windows 9x platform the system returns a code for each service pack. This method translates this code into a full description. On NT operating systems from NT4 service pack 6 onwards the service pack version number is available in the {\strike ServicePackMajor}{\v IDH_OSI_SERVICEPACKMAJOR} and {\strike ServicePackMinor}{\v IDH_OSI_SERVICEPACKMINOR} methods..\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_OSI_SERVICEPACKMAJOR}
${\footnote {$}TPJOSInfo.ServicePackMajor}
K{\footnote {K}ServicePackMajor,TPJOSInfo;TPJOSInfo,ServicePackMajor;ServicePackMajor}
A{\footnote {A}TPJOSInfo_ServicePackMajor;ServicePackMajor_Method;ServicePackMajor}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b ServicePackMajor\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system's major service pack version number\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ServicePackMajor: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the major version number of any service pack applied to the operating system. \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  only applies to NT platform operating systems from NT4 service pack 6 onwards. Returns 0 on un-supported products or if no service pack has been applied.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The corresponding minor service pack version number is provided by the {\strike ServicePackMinor}{\v IDH_OSI_SERVICEPACKMINOR} method. A full description of the service pack, for any product, is available via the {\strike ServicePack}{\v IDH_OSI_SERVICEPACK} method.\plain\f0\fs18\cf0 
\par 
\par 
\par \page 
#{\footnote {#}IDH_OSI_SERVICEPACKMINOR}
${\footnote {$}TPJOSInfo.ServicePackMinor}
K{\footnote {K}ServicePackMinor,TPJOSInfo;TPJOSInfo,ServicePackMinor;ServicePackMinor}
A{\footnote {A}TPJOSInfo_ServicePackMinor;ServicePackMinor_Method;ServicePackMinor}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJOSInfo.\plain\f1\fs22\cf2\b ServicePackMinor\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJOSInfo}{\v IDH_OSI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the operating system's minor service pack version number\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ServicePackMinor: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 Returns \plain\f1\fs18\cf0 the minor version number of any service pack applied to the operating system. \plain\f1\fs18\cf0\b Note:\plain\f1\fs18\cf0  only applies to NT platform operating systems from NT4 service pack 6 onwards. Returns 0 on un-supported products or if no service pack has been applied.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 The corresponding major service pack version number is provided by the {\strike ServicePackMajor}{\v IDH_OSI_SERVICEPACKMAJOR} method. A full description of the service pack, for any product, is available via the {\strike ServicePack}{\v IDH_OSI_SERVICEPACK} method.\plain\f0\fs18\cf0 
\par 
\par \page 
#{\footnote {#}IDH_CI_CLASS}
${\footnote {$}TPJComputerInfo}
K{\footnote {K}TPJComputerInfo}
A{\footnote {A}TPJComputerInfo_Object;TPJComputerInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  
\par \plain\f1\fs22\cf2\b TPJComputerInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_CI_HEIRACHY}          {\ul Properties}{\v IDH_CI_PROPERTIES}          {\ul Methods}{\v IDH_CI_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJComputerInfo\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 provides access to information \plain\f1\fs18\cf0 relating to the user's computer\plain\f0\fs18\cf0 .
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 TPJComputerInfo\plain\f0\fs18\cf0  is a \plain\f1\fs18\cf0 static class \plain\f0\fs18\cf0 that \plain\f1\fs18\cf0 provies information about the host compueter. The class' functionality is all exposed via its static methods. Because it is static the class does not need to be instantiated before use.
\par \plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_CI_HEIRACHY}
${\footnote {$}TPJComputerInfo Heirachy}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_Object,1)}
\par 
\par \page 
#{\footnote {#}IDH_CI_PROPERTIES}
${\footnote {$}TPJComputerInfo Properties}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \plain\f1\fs18\cf0 The class has no properties.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_CI_METHODS}
${\footnote {$}TPJComputerInfo Methods}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tx2400 \tx2600 \plain\f1\fs18\cf0 \tab {\strike BootMode}{\v IDH_CI_BootMode}
\par \tab {\strike ComputerName}{\v IDH_CI_COMPUTERNAME}
\par \tab {\strike Is64Bit}{\v IDH_CI_Is64Bit}
\par \tab {\strike IsNetworkPresent}{\v IDH_CI_IsNetworkPresent}
\par \tab {\strike MACAddress}{\v IDH_CI_MACADDRESS}
\par \tab {\strike Processor}{\v IDH_CI_Processor}
\par \tab {\strike ProcessorCount}{\v IDH_CI_ProcessorCount}
\par \tab {\strike UserName}{\v IDH_CI_USERNAME}
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_CI_BootMode}
${\footnote {$}TPJComputerInfo.BootMode}
K{\footnote {K}BootMode,TPJComputerInfo;TPJComputerInfo,BootMode;BootMode}
A{\footnote {A}TPJComputerInfo_BootMode;BootMode_Method;BootMode}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b BootMode\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Determines the operating system mode into which the the computer was booted\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  BootMode: {\strike TPJBootMode}{\v IDH_TPJBootMode};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 an enumerated type that describes how the computer's operating system was booted. See the {\strike TPJBootMode}{\v IDH_TPJBootMode} topic for details of the return value.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_CI_COMPUTERNAME}
${\footnote {$}TPJComputerInfo.ComputerName}
K{\footnote {K}ComputerName,TPJComputerInfo;TPJComputerInfo,ComputerName;ComputerName}
A{\footnote {A}TPJComputerInfo_ComputerName;ComputerName_Method;ComputerName}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b ComputerName\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the computer's name\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ComputerName: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the name of the computer on which the program is executing.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_CI_Is64Bit}
${\footnote {$}TPJComputerInfo.Is64Bit}
K{\footnote {K}Is64Bit,TPJComputerInfo;TPJComputerInfo,Is64Bit;Is64Bit}
A{\footnote {A}TPJComputerInfo_Is64Bit;Is64Bit_Method;Is64Bit}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b Is64Bit\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks if processor is 64 bit.\plain\f0\fs18\cf0 
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Is64Bit: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Returns True if the computer has one or more 64 bit processors. Returns False if processor is 32 bit. 
\par 
\par \page 
#{\footnote {#}IDH_CI_IsNetworkPresent}
${\footnote {$}TPJComputerInfo.IsNetworkPresent}
K{\footnote {K}IsNetworkPresent,TPJComputerInfo;TPJComputerInfo,IsNetworkPresent;IsNetworkPresent}
A{\footnote {A}TPJComputerInfo_IsNetworkPresent;IsNetworkPresent_Method;IsNetworkPresent}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b IsNetworkPresent\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Checks if a network is present.\plain\f0\fs18\cf0 
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  IsNetworkPresent: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Returns True if the computer is connected to a network or False otherwise. 
\par 
\par \page 
#{\footnote {#}IDH_CI_MACADDRESS}
${\footnote {$}TPJComputerInfo.MACAddress}
K{\footnote {K}MACAddress,TPJComputerInfo;TPJComputerInfo,MACAddress;MACAddress}
A{\footnote {A}TPJComputerInfo_MACAddress;MACAddress_Method;MACAddress}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b MACAddress\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the address of the first network card in the computer\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  MACAddress: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the address of the first network card found in the host computer. '' is returned if no network card is detected.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 If no network card is active then the MAC Address will not be detected. Furthermore NETBIOS must be enabled for TCP on the network card.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Microsoft notes that NETBIOS is not available Windows Vista and later, however tests show the method works on Vista SP1 with NETBIOS enabled.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Microsoft also note that this method of detecting MAC addresses may not work reliably on Windows 95, 98 and Me.\plain\f0\fs8\cf0 
\par 
\par \page 
#{\footnote {#}IDH_CI_Processor}
${\footnote {$}TPJComputerInfo.Processor}
K{\footnote {K}Processor,TPJComputerInfo;TPJComputerInfo,Processor;Processor}
A{\footnote {A}TPJComputerInfo_Processor;Processor_Method;Processor}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b Processor\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the kind of processor\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Processor: {\strike TPJProcessorArchitecture}{\v IDH_TPJProcessorArchitecture};
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the type of processor installed in the computer. See the {\strike TPJProcessorArchitecture}{\v IDH_TPJProcessorArchitecture} topic for details of the return value.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_CI_ProcessorCount}
${\footnote {$}TPJComputerInfo.ProcessorCount}
K{\footnote {K}ProcessorCount,TPJComputerInfo;TPJComputerInfo,ProcessorCount;ProcessorCount}
A{\footnote {A}TPJComputerInfo_ProcessorCount;ProcessorCount_Method;ProcessorCount}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b ProcessorCount\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the number of processors\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ProcessorCount: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the number of processors installed in the computer. 
\par 
\par \page 
#{\footnote {#}IDH_CI_USERNAME}
${\footnote {$}TPJComputerInfo.UserName}
K{\footnote {K}UserName,TPJComputerInfo;TPJComputerInfo,UserName;UserName}
A{\footnote {A}TPJComputerInfo_UserName;UserName_Method;UserName}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJComputerInfo.\plain\f1\fs22\cf2\b UserName\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJComputerInfo}{\v IDH_CI_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the user name\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  UserName: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the name of currently logged in user.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_CLASS}
${\footnote {$}TPJSystemFolders}
K{\footnote {K}TPJSystemFolders}
A{\footnote {A}TPJSystemFolders_Object;TPJSystemFolders}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  
\par \plain\f1\fs22\cf2\b TPJSystemFolders\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\ul Heirachy}{\v IDH_SF_HEIRACHY}          {\ul Properties}{\v IDH_SF_PROPERTIES}          {\ul Methods}{\v IDH_SF_METHODS}
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard TPJSystemFolders\plain\f1\fs18\cf0  \plain\f0\fs18\cf0 provides \plain\f1\fs18\cf0 details of the system's standard folders.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 TPJSystemFolders \plain\f0\fs18\cf0 is a \plain\f1\fs18\cf0 static class \plain\f0\fs18\cf0 that \plain\f1\fs18\cf0 provies details of the full paths of various special system folders. All TPJSystemFolders'  functionality is exposed via static methods. Because it is static the class does not need to be instantiated before use.
\par \plain\f1\fs8\cf0 \tab \plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_HEIRACHY}
${\footnote {$}TPJSystemFolders Heirachy}

\pard \plain \plain\f0\fs18\cf0\b Heirachy\plain\f0\fs18\cf0 
\par 
\par {\strike TObject}{\v !AL(TObject_Object,1)}
\par 
\par \page 
#{\footnote {#}IDH_SF_PROPERTIES}
${\footnote {$}TPJSystemFolders Properties}

\pard \plain \plain\f0\fs18\cf0\b Properties\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \plain\f1\fs18\cf0 The class has no properties.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_SF_METHODS}
${\footnote {$}TPJSystemFolders Methods}

\pard \plain \plain\f0\fs18\cf0\b Methods\plain\f0\fs18\cf0 
\par 
\par \pard \tx200 \tx2400 \tx2600 \plain\f1\fs18\cf0 \tab {\strike CommonFiles}{\v IDH_SF_COMMONFILES}
\par \tab {\strike ProgramFiles}{\v IDH_SF_PROGRAMFILES}
\par \tab {\strike Windows}{\v IDH_SF_WINDOWS}
\par \tab {\strike System}{\v IDH_SF_SYSTEM}
\par \tab {\strike SystemWow64}{\v IDH_SF_SystemWow64}
\par \tab {\strike Temp}{\v IDH_SF_TEMP}
\par \plain\f0\fs20\cf0 
\par \page 
#{\footnote {#}IDH_SF_COMMONFILES}
${\footnote {$}TPJSystemFolders.CommonFiles}
K{\footnote {K}CommonFiles,TPJSystemFolders;TPJSystemFolders,CommonFiles;CommonFiles}
A{\footnote {A}TPJSystemFolders_CommonFiles;CommonFiles_Method;CommonFiles}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b CommonFiles\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the Common Files folder path\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  CommonFiles: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the Common Files folder.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_PROGRAMFILES}
${\footnote {$}TPJSystemFolders.ProgramFiles}
K{\footnote {K}ProgramFiles,TPJSystemFolders;TPJSystemFolders,ProgramFiles;ProgramFiles}
A{\footnote {A}TPJSystemFolders_ProgramFiles;ProgramFiles_Method;ProgramFiles}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b ProgramFiles\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the Program Files folder path\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  ProgramFiles: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the Program Files folder.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_WINDOWS}
${\footnote {$}TPJSystemFolders.Windows}
K{\footnote {K}Windows,TPJSystemFolders;TPJSystemFolders,Windows;Windows}
A{\footnote {A}TPJSystemFolders_Windows;Windows_Method;Windows}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b Windows\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the Windows folder path\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Windows: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the Windows folder. This is the folder where Windows was installed.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_SYSTEM}
${\footnote {$}TPJSystemFolders.System}
K{\footnote {K}System,TPJSystemFolders;TPJSystemFolders,System;System}
A{\footnote {A}TPJSystemFolders_System;System_Method;System}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b System\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the System folder path\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  System: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the System folder. This is a sub folder of the Windows folder.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_SystemWow64}
${\footnote {$}TPJSystemFolders.SystemWow64}
K{\footnote {K}SystemWow64,TPJSystemFolders;TPJSystemFolders,SystemWow64;SystemWow64}
A{\footnote {A}TPJSystemFolders_SystemWow64;SystemWow64_Method;SystemWow64}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b SystemWow64\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the System folder path used by WOW64\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  SystemWow64: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the folder folder used to store shared 32 bit code on 64 bit Windows. An empty string is always returned on 32 bit systems.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_SF_TEMP}
${\footnote {$}TPJSystemFolders.Temp}
K{\footnote {K}Temp,TPJSystemFolders;TPJSystemFolders,Temp;Temp}
A{\footnote {A}TPJSystemFolders_Temp;Temp_Method;Temp}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b TPJSystemFolders.\plain\f1\fs22\cf2\b Temp\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike TPJSystemFolders}{\v IDH_SF_CLASS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Gets the temporary files folder path\plain\f0\fs18\cf0 .
\par 
\par \pard \keep \plain\f5\fs18\cf0\b class function\plain\f4\fs18\cf0  Temp: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This method\plain\f0\fs18\cf0  returns \plain\f1\fs18\cf0 the fully qualified path name of the temporary files folder. This is the folder where programs are expected to create their temporary files. On some Windows versions the folder may be different for each user.\plain\f0\fs8\cf0 
\par \page 
#{\footnote {#}IDH_EXOSINFOVARS}
${\footnote {$}Extended OS Information Variables}
K{\footnote {K}extended OS information variables}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  
\par \plain\f1\fs22\cf2\b Extended OS Information Variables\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard The {\strike PJSysInfo}{\v IDH_SI_UNIT} unit defines \plain\f1\fs18\cf0 several global variables containing extended operating system information. These variables build on similar Win32XXX variables defined in the SysUtils unit.\plain\f0\fs8\cf0 
\par \pard \fi-400 \li400 \tx400 
\par \plain\f1\fs18\cf0 The variables defined in PJSysInfo are:\plain\f0\fs18\cf0 
\par \pard \plain\f0\fs8\cf0 
\par \pard \fi-400 \li400 \tx400 \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32HaveExInfo}{\v IDH_WIN32HAVEEXINFO}
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32ServicePackMajor}{\v IDH_WIN32SERVICEPACKMAJOR}
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32ServicePackMinor}{\v IDH_WIN32SERVICEPACKMINOR}
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32SuiteMask}{\v IDH_WIN32SUITEMASK}
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32ProductType}{\v IDH_WIN32PRODUCTTYPE}\plain\f1\fs18\cf0 
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32HaveProductInfo}{\v IDH_Win32HaveProductInfo}
\par \plain\f2\fs18\cf0 \'A7\plain\f0\fs18\cf0 \tab {\strike Win32ProductInfo}{\v IDH_Win32ProductInfo}
\par 
\par \page 
#{\footnote {#}IDH_WIN32HAVEEXINFO}
${\footnote {$}Win32HaveExInfo}
K{\footnote {K}extended OS information variables,Win32HaveExInfo;Win32HaveExInfo}
A{\footnote {A}PJSysInfo_Win32HaveExInfo;Win32HaveExInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32HaveExInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32ServicePackMajor;PJSysInfo_Win32ServicePackMinor;PJSysInfo_Win32SuiteMask;PJSysInfo_Win32ProductType)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Determines whether extended operating system information is available.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32HaveExInfo: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 is true if extended \plain\f0\fs18\cf0 operating system\plain\f1\fs18\cf0  information is available and false if not. When false the values of the {\strike Win32ServicePackMajor}{\v IDH_WIN32SERVICEPACKMAJOR}, {\strike Win32ServicePackMinor}{\v IDH_WIN32SERVICEPACKMINOR}, {\strike Win32SuiteMask}{\v IDH_WIN32SUITEMASK} and {\strike Win32ProductType}{\v IDH_WIN32PRODUCTTYPE} variables are not valid and should not be used.\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that extended \plain\f0\fs18\cf0 operating system\plain\f1\fs18\cf0  information is available only on Windows NT platform operating systems from and including Windows NT4 Service Pack 6.\plain\f0\fs18\cf0 
\par 
\par \page 
#{\footnote {#}IDH_WIN32SERVICEPACKMAJOR}
${\footnote {$}Win32ServicePackMajor}
K{\footnote {K}extended OS information variables,Win32ServicePackMajor;Win32ServicePackMajor}
A{\footnote {A}PJSysInfo_Win32ServicePackMajor;Win32ServicePackMajor}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32ServicePackMajor\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32HaveExInfo;PJSysInfo_Win32ServicePackMinor;PJSysInfo_Win32SuiteMask;PJSysInfo_Win32ProductType)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Stores the service pack major version number.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32ServicePackM\plain\f5\fs18\cf0 aj\plain\f4\fs18\cf0 or: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 stores the major version number of the latest Service Pack installed on the system or 0 if there is no service pack.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that this variable only stores valid information in the {\strike Win32HaveExInfo}{\v IDH_WIN32HAVEEXINFO} variable is true.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WIN32SERVICEPACKMINOR}
${\footnote {$}Win32ServicePackMinor}
K{\footnote {K}extended OS information variables,Win32ServicePackMinor;Win32ServicePackMinor}
A{\footnote {A}PJSysInfo_Win32ServicePackMinor;Win32ServicePackMinor}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32ServicePackMinor\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32HaveExInfo;PJSysInfo_Win32ServicePackMajor;PJSysInfo_Win32SuiteMask;PJSysInfo_Win32ProductType)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Stores the service pack minor version number.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32ServicePackMinor: \plain\f5\fs18\cf0\b string\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 stores the minor version number of the latest Service Pack installed on the system.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that this variable only stores valid information in the {\strike Win32HaveExInfo}{\v IDH_WIN32HAVEEXINFO} variable is true.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WIN32SUITEMASK}
${\footnote {$}Win32SuiteMask}
K{\footnote {K}extended OS information variables,Win32SuiteMask;Win32SuiteMask}
A{\footnote {A}PJSysInfo_Win32SuiteMask;Win32SuiteMask}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32SuiteMask\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32HaveExInfo;PJSysInfo_Win32ServicePackMajor;PJSysInfo_Win32ServicePackMinor;PJSysInfo_Win32ProductType)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Stores a bitmask of operating system product suites.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32SuiteMask: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 stores a comination of bit flags that identify the product suites available on the system. The value is a combination of  VER_SUITE_* constants that are defined by Microsoft. The constants are declared in the PJSysInfo unit.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that this variable only stores valid information in the {\strike Win32HaveExInfo}{\v IDH_WIN32HAVEEXINFO} variable is true.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_WIN32PRODUCTTYPE}
${\footnote {$}Win32ProductType}
K{\footnote {K}extended OS information variables,Win32ProductType;Win32ProductType}
A{\footnote {A}PJSysInfo_Win32ProductType;Win32ProductType}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32ProductType\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32HaveExInfo;PJSysInfo_Win32ServicePackMajor;PJSysInfo_Win32ServicePackMinor;PJSysInfo_Win32SuiteMask)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Provides additional information about an operating system.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32ProductType: \plain\f5\fs18\cf0 Integer\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 stores additional information about an operating system product.a. The value one of the VER_NT_* constants defined by Microsoft. The constants are declared in the PJSysInfo unit.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that this variable only stores valid information in the {\strike Win32HaveExInfo}{\v IDH_WIN32HAVEEXINFO} variable is true.\plain\f0\fs18\cf0 
\par \page 
#{\footnote {#}IDH_Win32HaveProductInfo}
${\footnote {$}Win32HaveProductInfo}
K{\footnote {K}extended OS information variables,Win32HaveProductInfo;Win32HaveProductInfo}
A{\footnote {A}PJSysInfo_Win32HaveProductInfo;Win32HaveProductInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32HaveProductInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32ProductInfo)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Determines whether product information is available.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32HaveProductInfo: \plain\f5\fs18\cf0 Boolean\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 informs whether product information is available as returned by the Windows API function \plain\f1\fs18\cf0\i GetProductInfo\plain\f1\fs18\cf0 . This function is available on Windows Vista and later operating systems.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 When this variable is the product information code is provided by {\strike Win32ProductInfo}{\v IDH_Win32ProductInfo}, otherwise Win32ProductInfo is set to 0.
\par \page 
#{\footnote {#}IDH_Win32ProductInfo}
${\footnote {$}Win32ProductInfo}
K{\footnote {K}extended OS information variables,Win32ProductInfo;Win32ProductInfo}
A{\footnote {A}PJSysInfo_Win32ProductInfo;Win32ProductInfo}

\pard \plain \pard \keepn \plain\f0\fs8\cf2  \plain\f0\fs8\cf2\b 
\par \plain\f0\fs22\cf2\b Win32ProductInfo\plain\f0\fs20\cf0 
\par \plain\f0\fs12\cf0 
\par \plain\f0\fs18\cf0 {\strike See also}{\v !AL(PJSysInfo_Win32HaveProductInfo)}          {\strike Group}{\v IDH_EXOSINFOVARS} 
\par \plain\f0\fs8\cf0  \plain\f0\fs18\cf0 
\par \pard \plain\f1\fs18\cf0 Provides additional product information about an operating system.\plain\f0\fs18\cf0 
\par 
\par \plain\f0\fs18\cf0\b Unit\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f0\fs18\cf0 {\strike PJSysInfo}{\v IDH_SI_UNIT}
\par 
\par \pard \keep \plain\f5\fs18\cf0\b var\plain\f4\fs18\cf0  Win32ProductInfo: \plain\f5\fs18\cf0 LongWord\plain\f4\fs18\cf0 ;
\par \pard \plain\f0\fs18\cf0 
\par \plain\f0\fs18\cf0\b Description\plain\f0\fs18\cf0 
\par \plain\f0\fs8\cf0 
\par \plain\f1\fs18\cf0 This global variable\plain\f0\fs18\cf0  \plain\f1\fs18\cf0 provides additional product information about the operating system. The value is one of the PRODUCT_* constants defined by Microsoft. The constants are declared in the PJSysInfo unit.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Note that this variable only stores valid information if the {\strike Win32HaveProductInfo}{\v IDH_Win32HaveProductInfo} variable is true, otherwise the variable is set to 0.
\par \plain\f1\fs8\cf0 
\par \plain\f1\fs18\cf0 Win32ProductInfo stores the value returned by the \plain\f1\fs18\cf0\i GetProductInfo\plain\f1\fs18\cf0  Windows API function that was introduced in Windows Vista.
\par \page 
}